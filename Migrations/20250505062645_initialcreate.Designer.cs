// <auto-generated />
using KnowledgeBaseAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace optsupport.Migrations
{
    [DbContext(typeof(KnowledgeBaseContext))]
    [Migration("20250505062645_initialcreate")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KnowledgeBaseAPI.Models.Article", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("KnowledgeBaseAPI.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("KnowledgeBaseAPI.Models.InventoryData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FormName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Overview")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId")
                        .IsUnique();

                    b.ToTable("InventoryData");
                });

            modelBuilder.Entity("optsupport.Model.InventoryImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InventoryDataId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InventoryDataId");

                    b.ToTable("InventoryImages");
                });

            modelBuilder.Entity("optsupport.Model.Prerequisite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InventoryDataId")
                        .HasColumnType("int");

                    b.Property<string>("Requirement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InventoryDataId");

                    b.ToTable("Prerequisites");
                });

            modelBuilder.Entity("optsupport.Model.ProcessStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InventoryDataId")
                        .HasColumnType("int");

                    b.Property<string>("Step")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InventoryDataId");

                    b.ToTable("ProcessSteps");
                });

            modelBuilder.Entity("KnowledgeBaseAPI.Models.Article", b =>
                {
                    b.HasOne("KnowledgeBaseAPI.Models.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("KnowledgeBaseAPI.Models.InventoryData", b =>
                {
                    b.HasOne("KnowledgeBaseAPI.Models.Article", "Article")
                        .WithOne("InventoryData")
                        .HasForeignKey("KnowledgeBaseAPI.Models.InventoryData", "ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("optsupport.Model.AppLinks", "AppLinks", b1 =>
                        {
                            b1.Property<int>("InventoryDataId")
                                .HasColumnType("int");

                            b1.HasKey("InventoryDataId");

                            b1.ToTable("InventoryData");

                            b1.WithOwner()
                                .HasForeignKey("InventoryDataId");

                            b1.OwnsOne("optsupport.Model.StoreLink", "AppStore", b2 =>
                                {
                                    b2.Property<int>("AppLinksInventoryDataId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Image")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("AppStore_Image");

                                    b2.Property<string>("Url")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("AppStore_Url");

                                    b2.HasKey("AppLinksInventoryDataId");

                                    b2.ToTable("InventoryData");

                                    b2.WithOwner()
                                        .HasForeignKey("AppLinksInventoryDataId");
                                });

                            b1.OwnsOne("optsupport.Model.StoreLink", "PlayStore", b2 =>
                                {
                                    b2.Property<int>("AppLinksInventoryDataId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Image")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("PlayStore_Image");

                                    b2.Property<string>("Url")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("PlayStore_Url");

                                    b2.HasKey("AppLinksInventoryDataId");

                                    b2.ToTable("InventoryData");

                                    b2.WithOwner()
                                        .HasForeignKey("AppLinksInventoryDataId");
                                });

                            b1.Navigation("AppStore")
                                .IsRequired();

                            b1.Navigation("PlayStore")
                                .IsRequired();
                        });

                    b.OwnsOne("optsupport.Model.ArticleLink", "ArticleLink", b1 =>
                        {
                            b1.Property<int>("InventoryDataId")
                                .HasColumnType("int");

                            b1.Property<string>("Text")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ArticleLink_Text");

                            b1.Property<string>("Url")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ArticleLink_Url");

                            b1.HasKey("InventoryDataId");

                            b1.ToTable("InventoryData");

                            b1.WithOwner()
                                .HasForeignKey("InventoryDataId");
                        });

                    b.OwnsOne("optsupport.Model.Author", "Author", b1 =>
                        {
                            b1.Property<int>("InventoryDataId")
                                .HasColumnType("int");

                            b1.Property<string>("Avatar")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Author_Avatar");

                            b1.Property<string>("LastUpdated")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Author_LastUpdated");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Author_Name");

                            b1.HasKey("InventoryDataId");

                            b1.ToTable("InventoryData");

                            b1.WithOwner()
                                .HasForeignKey("InventoryDataId");
                        });

                    b.Navigation("AppLinks")
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("ArticleLink")
                        .IsRequired();

                    b.Navigation("Author")
                        .IsRequired();
                });

            modelBuilder.Entity("optsupport.Model.InventoryImage", b =>
                {
                    b.HasOne("KnowledgeBaseAPI.Models.InventoryData", null)
                        .WithMany("Images")
                        .HasForeignKey("InventoryDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("optsupport.Model.Prerequisite", b =>
                {
                    b.HasOne("KnowledgeBaseAPI.Models.InventoryData", null)
                        .WithMany("Prerequisites")
                        .HasForeignKey("InventoryDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("optsupport.Model.ProcessStep", b =>
                {
                    b.HasOne("KnowledgeBaseAPI.Models.InventoryData", null)
                        .WithMany("ProcessSteps")
                        .HasForeignKey("InventoryDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KnowledgeBaseAPI.Models.Article", b =>
                {
                    b.Navigation("InventoryData")
                        .IsRequired();
                });

            modelBuilder.Entity("KnowledgeBaseAPI.Models.Category", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("KnowledgeBaseAPI.Models.InventoryData", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Prerequisites");

                    b.Navigation("ProcessSteps");
                });
#pragma warning restore 612, 618
        }
    }
}
